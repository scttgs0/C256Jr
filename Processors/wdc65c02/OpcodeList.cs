using System.Collections.Generic;


namespace FoenixCore.Processor.wdc65c02
{
    public class OpcodeList : List<OpCode>
    {
        #region constants

        public const int PUSH2 = 16;
        public const int ADD1_16BIT = 32;

        public const int BRK_StackImplied = 0x00;
        public const int ORA_ZeroPageIndexedIndirectWithX = 0x01;
        // NOP_Implied = 0x02;
        // NOP_Implied = 0x03;
        public const int TSB_ZeroPage = 0x04;
        public const int ORA_ZeroPage = 0x05;
        public const int ASL_ZeroPage = 0x06;
        // NOP_Implied = 0x07;      //public const int RMB0_ZeroPage = 0x07;
        public const int PHP_StackImplied = 0x08;
        public const int ORA_Immediate = 0x09;
        public const int ASL_Accumulator = 0x0A;
        // NOP_Implied = 0x0B;
        public const int TSB_Absolute = 0x0C;
        public const int ORA_Absolute = 0x0D;
        public const int ASL_Absolute = 0x0E;
        // NOP_Implied = 0x0F;      //public const int BBR0_ProgramCounterRelative = 0x0F;
        public const int BPL_ProgramCounterRelative = 0x10;
        public const int ORA_ZeroPageIndirectIndexedWithY = 0x11;
        public const int ORA_ZeroPageIndirect = 0x12;
        // NOP_Implied = 0x13;
        public const int TRB_ZeroPage = 0x14;
        public const int ORA_ZeroPageIndexedWithX = 0x15;
        public const int ASL_ZeroPageIndexedWithX = 0x16;
        // NOP_Implied = 0x17;      //public const int RMB1_ZeroPage = 0x17;
        public const int CLC_Implied = 0x18;
        public const int ORA_AbsoluteIndexedWithY = 0x19;
        public const int INC_Accumulator = 0x1A;
        // NOP_Implied = 0x1B;
        public const int TRB_Absolute = 0x1C;
        public const int ORA_AbsoluteIndexedWithX = 0x1D;
        public const int ASL_AbsoluteIndexedWithX = 0x1E;
        // NOP_Implied = 0x1F;      //public const int BBR1_ProgramCounterRelative = 0x1F;
        public const int JSR_Absolute = 0x20;
        public const int AND_ZeroPageIndexedIndirectWithX = 0x21;
        // NOP_Implied = 0x22;
        // NOP_Implied = 0x23;
        public const int BIT_ZeroPage = 0x24;
        public const int AND_ZeroPage = 0x25;
        public const int ROL_ZeroPage = 0x26;
        // NOP_Implied = 0x27;      //public const int RMB2_ZeroPage = 0x27;
        public const int PLP_StackImplied = 0x28;
        public const int AND_Immediate = 0x29;
        public const int ROL_Accumulator = 0x2A;
        // NOP_Implied = 0x2B;
        public const int BIT_Absolute = 0x2C;
        public const int AND_Absolute = 0x2D;
        public const int ROL_Absolute = 0x2E;
        // NOP_Implied = 0x2F;      //public const int BBR2_ProgramCounterRelative = 0x2F;
        public const int BMI_ProgramCounterRelative = 0x30;
        public const int AND_ZeroPageIndirectIndexedWithY = 0x31;
        public const int AND_ZeroPageIndirect = 0x32;
        // NOP_Implied = 0x33;
        public const int BIT_ZeroPageIndexedWithX = 0x34;
        public const int AND_ZeroPageIndexedWithX = 0x35;
        public const int ROL_ZeroPageIndexedWithX = 0x36;
        // NOP_Implied = 0x37;      //public const int RMB3_ZeroPage = 0x37;
        public const int SEC_Implied = 0x38;
        public const int AND_AbsoluteIndexedWithY = 0x39;
        public const int DEC_Accumulator = 0x3A;
        // NOP_Implied = 0x3B;
        public const int BIT_AbsoluteIndexedWithX = 0x3C;
        public const int AND_AbsoluteIndexedWithX = 0x3D;
        public const int ROL_AbsoluteIndexedWithX = 0x3E;
        // NOP_Implied = 0x3F;      //public const int BBR3_ProgramCounterRelative = 0x3F;
        public const int RTI_StackImplied = 0x40;
        public const int EOR_ZeroPageIndexedIndirectWithX = 0x41;
        // NOP_Implied = 0x42;
        // NOP_Implied = 0x43;
        // NOP_Implied = 0x44;
        public const int EOR_ZeroPage = 0x45;
        public const int LSR_ZeroPage = 0x46;
        // NOP_Implied = 0x47;      //public const int RMB4_ZeroPage = 0x47;
        public const int PHA_StackImplied = 0x48;
        public const int EOR_Immediate = 0x49;
        public const int LSR_Accumulator = 0x4A;
        // NOP_Implied = 0x4B;
        public const int JMP_Absolute = 0x4C;
        public const int EOR_Absolute = 0x4D;
        public const int LSR_Absolute = 0x4E;
        // NOP_Implied = 0x4F;      //public const int BBR4_ProgramCounterRelative = 0x4F;
        public const int BVC_ProgramCounterRelative = 0x50;
        public const int EOR_ZeroPageIndirectIndexedWithY = 0x51;
        public const int EOR_ZeroPageIndirect = 0x52;
        // NOP_Implied = 0x53;
        // NOP_Implied = 0x54;
        public const int EOR_ZeroPageIndexedWithX = 0x55;
        public const int LSR_ZeroPageIndexedWithX = 0x56;
        // NOP_Implied = 0x57;      //public const int RMB5_ZeroPage = 0x57;
        public const int CLI_Implied = 0x58;
        public const int EOR_AbsoluteIndexedWithY = 0x59;
        public const int PHY_StackImplied = 0x5A;
        // NOP_Implied = 0x5B;
        // NOP_Implied = 0x5C;
        public const int EOR_AbsoluteIndexedWithX = 0x5D;
        public const int LSR_AbsoluteIndexedWithX = 0x5E;
        // NOP_Implied = 0x5F;      //public const int BBR5_ProgramCounterRelative = 0x5F;
        public const int RTS_StackImplied = 0x60;
        public const int ADC_ZeroPageIndexedIndirectWithX = 0x61;
        // NOP_Implied = 0x62;
        // NOP_Implied = 0x63;
        public const int STZ_ZeroPage = 0x64;
        public const int ADC_ZeroPage = 0x65;
        public const int ROR_ZeroPage = 0x66;
        // NOP_Implied = 0x67;      //public const int RMB6_ZeroPage = 0x67;
        public const int PLA_StackImplied = 0x68;
        public const int ADC_Immediate = 0x69;
        public const int ROR_Accumulator = 0x6A;
        // NOP_Implied = 0x6B;
        public const int JMP_AbsoluteIndirect = 0x6C;
        public const int ADC_Absolute = 0x6D;
        public const int ROR_Absolute = 0x6E;
        // NOP_Implied = 0x6F;      //public const int BBR6_ProgramCounterRelative = 0x6F;
        public const int BVS_ProgramCounterRelative = 0x70;
        public const int ADC_ZeroPageIndirectIndexedWithY = 0x71;
        public const int ADC_ZeroPageIndirect = 0x72;
        // NOP_Implied = 0x73;
        public const int STZ_ZeroPageIndexedWithX = 0x74;
        public const int ADC_ZeroPageIndexedWithX = 0x75;
        public const int ROR_ZeroPageIndexedWithX = 0x76;
        // NOP_Implied = 0x77;      //public const int RMB7_ZeroPage = 0x77;
        public const int SEI_Implied = 0x78;
        public const int ADC_AbsoluteIndexedWithY = 0x79;
        public const int PLY_StackImplied = 0x7A;
        // NOP_Implied = 0x7B;
        public const int JMP_AbsoluteIndexedIndirectWithX = 0x7C;
        public const int ADC_AbsoluteIndexedWithX = 0x7D;
        public const int ROR_AbsoluteIndexedWithX = 0x7E;
        // NOP_Implied = 0x7F;      //public const int BBR7_ProgramCounterRelative = 0x7F;
        public const int BRA_ProgramCounterRelative = 0x80;
        public const int STA_ZeroPageIndexedIndirectWithX = 0x81;
        // NOP_Implied = 0x82;
        // NOP_Implied = 0x83;
        public const int STY_ZeroPage = 0x84;
        public const int STA_ZeroPage = 0x85;
        public const int STX_ZeroPage = 0x86;
        // NOP_Implied = 0x87;      //public const int SMB0_ZeroPage = 0x87;
        public const int DEY_Implied = 0x88;
        public const int BIT_Immediate = 0x89;
        public const int TXA_Implied = 0x8A;
        // NOP_Implied = 0x8B;
        public const int STY_Absolute = 0x8C;
        public const int STA_Absolute = 0x8D;
        public const int STX_Absolute = 0x8E;
        // NOP_Implied = 0x8F;      //public const int BBS0_ProgramCounterRelative = 0x8F;
        public const int BCC_ProgramCounterRelative = 0x90;
        public const int STA_ZeroPageIndirectIndexedWithY = 0x91;
        public const int STA_ZeroPageIndirect = 0x92;
        // NOP_Implied = 0x93;
        public const int STY_ZeroPageIndexedWithX = 0x94;
        public const int STA_ZeroPageIndexedWithX = 0x95;
        public const int STX_ZeroPageIndexedWithY = 0x96;
        // NOP_Implied = 0x97;      //public const int SMB1_ZeroPage = 0x97;
        public const int TYA_Implied = 0x98;
        public const int STA_AbsoluteIndexedWithY = 0x99;
        public const int TXS_Implied = 0x9A;
        // NOP_Implied = 0x9B;
        public const int STZ_Absolute = 0x9C;
        public const int STA_AbsoluteIndexedWithX = 0x9D;
        public const int STZ_AbsoluteIndexedWithX = 0x9E;
        // NOP_Implied = 0x9F;      //public const int BBS1_ProgramCounterRelative = 0x9F;
        public const int LDY_Immediate = 0xA0;
        public const int LDA_ZeroPageIndexedIndirectWithX = 0xA1;
        public const int LDX_Immediate = 0xA2;
        // NOP_Implied = 0xA3;
        public const int LDY_ZeroPage = 0xA4;
        public const int LDA_ZeroPage = 0xA5;
        public const int LDX_ZeroPage = 0xA6;
        // NOP_Implied = 0xA7;      //public const int SMB2_ZeroPage = 0xA7;
        public const int TAY_Implied = 0xA8;
        public const int LDA_Immediate = 0xA9;
        public const int TAX_Implied = 0xAA;
        // NOP_Implied = 0xAB;
        public const int LDY_Absolute = 0xAC;
        public const int LDA_Absolute = 0xAD;
        public const int LDX_Absolute = 0xAE;
        // NOP_Implied = 0xAF;      //public const int BBS2_ProgramCounterRelative = 0xAF;
        public const int BCS_ProgramCounterRelative = 0xB0;
        public const int LDA_ZeroPageIndirectIndexedWithY = 0xB1;
        public const int LDA_ZeroPageIndirect = 0xB2;
        // NOP_Implied = 0xB3;
        public const int LDY_ZeroPageIndexedWithX = 0xB4;
        public const int LDA_ZeroPageIndexedWithX = 0xB5;
        public const int LDX_ZeroPageIndexedWithY = 0xB6;
        // NOP_Implied = 0xB7;      //public const int SMB3_ZeroPage = 0xB7;
        public const int CLV_Implied = 0xB8;
        public const int LDA_AbsoluteIndexedWithY = 0xB9;
        public const int TSX_Implied = 0xBA;
        // NOP_Implied = 0xBB;
        public const int LDY_AbsoluteIndexedWithX = 0xBC;
        public const int LDA_AbsoluteIndexedWithX = 0xBD;
        public const int LDX_AbsoluteIndexedWithY = 0xBE;
        // NOP_Implied = 0xBF;      //public const int BBS3_ProgramCounterRelative = 0xBF;
        public const int CPY_Immediate = 0xC0;
        public const int CMP_ZeroPageIndexedIndirectWithX = 0xC1;
        // NOP_Implied = 0xC2;
        // NOP_Implied = 0xC3;
        public const int CPY_ZeroPage = 0xC4;
        public const int CMP_ZeroPage = 0xC5;
        public const int DEC_ZeroPage = 0xC6;
        // NOP_Implied = 0xC7;      //public const int SMB4_ZeroPage = 0xC7;
        public const int INY_Implied = 0xC8;
        public const int CMP_Immediate = 0xC9;
        public const int DEX_Implied = 0xCA;
        public const int WAI_Implied = 0xCB;
        public const int CPY_Absolute = 0xCC;
        public const int CMP_Absolute = 0xCD;
        public const int DEC_Absolute = 0xCE;
        // NOP_Implied = 0xCF;      //public const int BBS4_ProgramCounterRelative = 0xCF;
        public const int BNE_ProgramCounterRelative = 0xD0;
        public const int CMP_ZeroPageIndirectIndexedWithY = 0xD1;
        public const int CMP_ZeroPageIndirect = 0xD2;
        // NOP_Implied = 0xD3;
        // NOP_Implied = 0xD4;
        public const int CMP_ZeroPageIndexedWithX = 0xD5;
        public const int DEC_ZeroPageIndexedWithX = 0xD6;
        // NOP_Implied = 0xD7;      //public const int SMB5_ZeroPage = 0xD7;
        public const int CLD_Implied = 0xD8;
        public const int CMP_AbsoluteIndexedWithY = 0xD9;
        public const int PHX_StackImplied = 0xDA;
        public const int STP_Implied = 0xDB;
        // NOP_Implied = 0xDC;
        public const int CMP_AbsoluteIndexedWithX = 0xDD;
        public const int DEC_AbsoluteIndexedWithX = 0xDE;
        // NOP_Implied = 0xDF;      //public const int BBS5_ProgramCounterRelative = 0xDF;
        public const int CPX_Immediate = 0xE0;
        public const int SBC_ZeroPageIndexedIndirectWithX = 0xE1;
        // NOP_Implied = 0xE2;
        // NOP_Implied = 0xE3;
        public const int CPX_ZeroPage = 0xE4;
        public const int SBC_ZeroPage = 0xE5;
        public const int INC_ZeroPage = 0xE6;
        // NOP_Implied = 0xE7;      //public const int SMB6_ZeroPage = 0xE7;
        public const int INX_Implied = 0xE8;
        public const int SBC_Immediate = 0xE9;
        public const int NOP_Implied = 0xEA;
        // NOP_Implied = 0xEB;
        public const int CPX_Absolute = 0xEC;
        public const int SBC_Absolute = 0xED;
        public const int INC_Absolute = 0xEE;
        // NOP_Implied = 0xEF;      //public const int BBS6_ProgramCounterRelative = 0xEF;
        public const int BEQ_ProgramCounterRelative = 0xF0;
        public const int SBC_ZeroPageIndirectIndexedWithY = 0xF1;
        public const int SBC_ZeroPageIndirect = 0xF2;
        // NOP_Implied = 0xF3;
        // NOP_Implied = 0xF4;
        public const int SBC_ZeroPageIndexedWithX = 0xF5;
        public const int INC_ZeroPageIndexedWithX = 0xF6;
        // NOP_Implied = 0xF7;      //public const int SMB7_ZeroPage = 0xF7;
        public const int SED_Implied = 0xF8;
        public const int SBC_AbsoluteIndexedWithY = 0xF9;
        public const int PLX_StackImplied = 0xFA;
        // NOP_Implied = 0xFB;
        // NOP_Implied = 0xFC;
        public const int SBC_AbsoluteIndexedWithX = 0xFD;
        public const int INC_AbsoluteIndexedWithX = 0xFE;
        // NOP_Implied = 0xFF;      //public const int BBS7_ = 0xFF;

        #endregion constants

        public OpcodeList(Operations operations, CentralProcessingUnit cpu)
        {
            Add(new OpCode(0x00, "BRK", 2, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteInterrupt)));
            Add(new OpCode(0x01, "ORA", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x04, "TSB", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteTSBTRB)));
            Add(new OpCode(0x05, "ORA", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x06, "ASL", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x07, "RMB0", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x08, "PHP", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0x09, "ORA", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x0A, "ASL", 1, AddressModes.Accumulator, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            Add(new OpCode(0x0C, "TSB", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteTSBTRB)));
            Add(new OpCode(0x0D, "ORA", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x0E, "ASL", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x0F, "BBR0", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x10, "BPL", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0x11, "ORA", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x12, "ORA", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x14, "TRB", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteTSBTRB)));
            Add(new OpCode(0x15, "ORA", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x16, "ASL", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x17, "RMB1", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x18, "CLC", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteStatusReg)));
            Add(new OpCode(0x19, "ORA", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x1A, "INC", 1, AddressModes.Accumulator, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            Add(new OpCode(0x1C, "TRB", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteTSBTRB)));
            Add(new OpCode(0x1D, "ORA", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteORA)));
            Add(new OpCode(0x1E, "ASL", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x1F, "BBR1", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x20, "JSR", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteJumpReturn)));
            Add(new OpCode(0x21, "AND", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x24, "BIT", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteBIT)));
            Add(new OpCode(0x25, "AND", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x26, "ROL", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x27, "RMB2", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x28, "PLP", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0x29, "AND", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x2A, "ROL", 1, AddressModes.Accumulator, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            Add(new OpCode(0x2C, "BIT", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteBIT)));
            Add(new OpCode(0x2D, "AND", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x2E, "ROL", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x2F, "BBR2", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x30, "BMI", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0x31, "AND", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x32, "AND", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x34, "BIT", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteBIT)));
            Add(new OpCode(0x35, "AND", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x36, "ROL", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x37, "RMB3", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x38, "SEC", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteStatusReg)));
            Add(new OpCode(0x39, "AND", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x3A, "DEC", 1, AddressModes.Accumulator, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            Add(new OpCode(0x3C, "BIT", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteBIT)));
            Add(new OpCode(0x3D, "AND", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteAND)));
            Add(new OpCode(0x3E, "ROL", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x3F, "BBR3", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x40, "RTI", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteJumpReturn)));
            Add(new OpCode(0x41, "EOR", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x45, "EOR", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x46, "LSR", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x47, "RMB4", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x48, "PHA", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0x49, "EOR", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x4A, "LSR", 1, AddressModes.Accumulator, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            Add(new OpCode(0x4C, "JMP", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteJumpReturn)));
            Add(new OpCode(0x4D, "EOR", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x4E, "LSR", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x4F, "BBR4", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x50, "BVC", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0x51, "EOR", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x52, "EOR", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x55, "EOR", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x56, "LSR", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x57, "RMB5", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x58, "CLI", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteStatusReg)));
            Add(new OpCode(0x59, "EOR", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x5A, "PHY", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0x5D, "EOR", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteEOR)));
            Add(new OpCode(0x5E, "LSR", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x5F, "BBR5", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x60, "RTS", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteJumpReturn)));
            Add(new OpCode(0x61, "ADC", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x64, "STZ", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSTZ)));
            Add(new OpCode(0x65, "ADC", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x66, "ROR", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x67, "RMB6", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x68, "PLA", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0x69, "ADC", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x6A, "ROR", 1, AddressModes.Accumulator, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            Add(new OpCode(0x6C, "JMP", 3, AddressModes.AbsoluteIndirect, new OpCode.ExecuteDelegate(operations.ExecuteJumpReturn)));
            Add(new OpCode(0x6D, "ADC", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x6E, "ROR", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x6F, "BBR6", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x70, "BVS", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0x71, "ADC", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x72, "ADC", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x74, "STZ", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteSTZ)));
            Add(new OpCode(0x75, "ADC", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x76, "ROR", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x77, "RMB7", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteRMB)));
            Add(new OpCode(0x78, "SEI", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteStatusReg)));
            Add(new OpCode(0x79, "ADC", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x7A, "PLY", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0x7C, "JMP", 3, AddressModes.AbsoluteIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteJumpReturn)));
            Add(new OpCode(0x7D, "ADC", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteADC)));
            Add(new OpCode(0x7E, "ROR", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteShift)));
            // Add(new OpCode(0x7F, "BBR7", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBR)));
            Add(new OpCode(0x80, "BRA", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0x81, "STA", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x84, "STY", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSTY)));
            Add(new OpCode(0x85, "STA", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x86, "STX", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSTX)));
            // Add(new OpCode(0x87, "SMB0", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0x88, "DEY", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            Add(new OpCode(0x89, "BIT", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteBIT)));
            Add(new OpCode(0x8A, "TXA", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteTransfer)));
            Add(new OpCode(0x8C, "STY", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteSTY)));
            Add(new OpCode(0x8D, "STA", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x8E, "STX", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteSTX)));
            // Add(new OpCode(0x8F, "BBS0", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
            Add(new OpCode(0x90, "BCC", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0x91, "STA", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x92, "STA", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x94, "STY", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteSTY)));
            Add(new OpCode(0x95, "STA", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x96, "STX", 2, AddressModes.ZeroPageIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteSTX)));
            // Add(new OpCode(0x97, "SMB1", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0x98, "TYA", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteTransfer)));
            Add(new OpCode(0x99, "STA", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x9A, "TXS", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteTransfer)));
            Add(new OpCode(0x9C, "STZ", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteSTZ)));
            Add(new OpCode(0x9D, "STA", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteSTA)));
            Add(new OpCode(0x9E, "STZ", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteSTZ)));
            // Add(new OpCode(0x9F, "BBS1", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
            Add(new OpCode(0xA0, "LDY", 2, cpu.Y, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteLDY)));
            Add(new OpCode(0xA1, "LDA", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xA2, "LDX", 2, cpu.X, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteLDX)));
            Add(new OpCode(0xA4, "LDY", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteLDY)));
            Add(new OpCode(0xA5, "LDA", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xA6, "LDX", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteLDX)));
            // Add(new OpCode(0xA7, "SMB2", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0xA8, "TAY", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteTransfer)));
            Add(new OpCode(0xA9, "LDA", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xAA, "TAX", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteTransfer)));
            Add(new OpCode(0xAC, "LDY", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteLDY)));
            Add(new OpCode(0xAD, "LDA", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xAE, "LDX", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteLDX)));
            // Add(new OpCode(0xAF, "BBS2", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
            Add(new OpCode(0xB0, "BCS", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0xB1, "LDA", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xB2, "LDA", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xB4, "LDY", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteLDY)));
            Add(new OpCode(0xB5, "LDA", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xB6, "LDX", 2, AddressModes.ZeroPageIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteLDX)));
            // Add(new OpCode(0xB7, "SMB3", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0xB8, "CLV", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteStatusReg)));
            Add(new OpCode(0xB9, "LDA", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xBA, "TSX", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteTransfer)));
            Add(new OpCode(0xBC, "LDY", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteLDY)));
            Add(new OpCode(0xBD, "LDA", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteLDA)));
            Add(new OpCode(0xBE, "LDX", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteLDX)));
            // Add(new OpCode(0xBF, "BBS3", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
            Add(new OpCode(0xC0, "CPY", 2, cpu.Y, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteCPY)));
            Add(new OpCode(0xC1, "CMP", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xC4, "CPY", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteCPY)));
            Add(new OpCode(0xC5, "CMP", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xC6, "DEC", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xC7, "SMB4", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0xC8, "INY", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            Add(new OpCode(0xC9, "CMP", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xCA, "DEX", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            Add(new OpCode(0xCB, "WAI", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteWAI)));
            Add(new OpCode(0xCC, "CPY", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteCPY)));
            Add(new OpCode(0xCD, "CMP", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xCE, "DEC", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xCF, "BBS4", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
            Add(new OpCode(0xD0, "BNE", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0xD1, "CMP", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xD2, "CMP", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xD5, "CMP", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xD6, "DEC", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xD7, "SMB5", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0xD8, "CLD", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteStatusReg)));
            Add(new OpCode(0xD9, "CMP", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xDA, "PHX", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0xDB, "STP", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteMisc)));
            Add(new OpCode(0xDD, "CMP", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteCMP)));
            Add(new OpCode(0xDE, "DEC", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xDF, "BBS5", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
            Add(new OpCode(0xE0, "CPX", 2, cpu.X, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteCPX)));
            Add(new OpCode(0xE1, "SBC", 2, AddressModes.ZeroPageIndexedIndirectWithX, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xE4, "CPX", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteCPX)));
            Add(new OpCode(0xE5, "SBC", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xE6, "INC", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xE7, "SMB6", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0xE8, "INX", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            Add(new OpCode(0xE9, "SBC", 2, cpu.A, AddressModes.Immediate, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xEA, "NOP", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteMisc)));
            Add(new OpCode(0xEC, "CPX", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteCPX)));
            Add(new OpCode(0xED, "SBC", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xEE, "INC", 3, AddressModes.Absolute, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xEF, "BBS6", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
            Add(new OpCode(0xF0, "BEQ", 2, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBranch)));
            Add(new OpCode(0xF1, "SBC", 2, AddressModes.ZeroPageIndirectIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xF2, "SBC", 2, AddressModes.ZeroPageIndirect, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xF5, "SBC", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xF6, "INC", 2, AddressModes.ZeroPageIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xF7, "SMB7", 2, AddressModes.ZeroPage, new OpCode.ExecuteDelegate(operations.ExecuteSMB)));
            Add(new OpCode(0xF8, "SED", 1, AddressModes.Implied, new OpCode.ExecuteDelegate(operations.ExecuteStatusReg)));
            Add(new OpCode(0xF9, "SBC", 3, AddressModes.AbsoluteIndexedWithY, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xFA, "PLX", 1, AddressModes.StackImplied, new OpCode.ExecuteDelegate(operations.ExecuteStack)));
            Add(new OpCode(0xFD, "SBC", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteSBC)));
            Add(new OpCode(0xFE, "INC", 3, AddressModes.AbsoluteIndexedWithX, new OpCode.ExecuteDelegate(operations.ExecuteINCDEC)));
            // Add(new OpCode(0xFF, "BBS7", 4, AddressModes.ProgramCounterRelative, new OpCode.ExecuteDelegate(operations.ExecuteBBS)));
        }
    }
}
